"use strict";(self.webpackChunkrucio_webui=self.webpackChunkrucio_webui||[]).push([[2158],{"./node_modules/@tanstack/query-core/build/modern/focusManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>focusManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),focusManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.l{#focused;#cleanup;#setup;constructor(){super(),this.#setup=onFocus=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.sk&&window.addEventListener){const listener=()=>onFocus();return window.addEventListener("visibilitychange",listener,!1),()=>{window.removeEventListener("visibilitychange",listener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup((focused=>{"boolean"==typeof focused?this.setFocused(focused):this.onFocus()}))}setFocused(focused){this.#focused!==focused&&(this.#focused=focused,this.onFocus())}onFocus(){const isFocused=this.isFocused();this.listeners.forEach((listener=>{listener(isFocused)}))}isFocused(){return"boolean"==typeof this.#focused?this.#focused:"hidden"!==globalThis.document?.visibilityState}}},"./node_modules/@tanstack/query-core/build/modern/notifyManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Vr:()=>notifyManager});var defaultScheduler=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/timeoutManager.js").Hp;var notifyManager=function createNotifyManager(){let queue=[],transactions=0,notifyFn=callback=>{callback()},batchNotifyFn=callback=>{callback()},scheduleFn=defaultScheduler;const schedule=callback=>{transactions?queue.push(callback):scheduleFn((()=>{notifyFn(callback)}))};return{batch:callback=>{let result;transactions++;try{result=callback()}finally{transactions--,transactions||(()=>{const originalQueue=queue;queue=[],originalQueue.length&&scheduleFn((()=>{batchNotifyFn((()=>{originalQueue.forEach((callback=>{notifyFn(callback)}))}))}))})()}return result},batchCalls:callback=>(...args)=>{schedule((()=>{callback(...args)}))},schedule,setNotifyFunction:fn=>{notifyFn=fn},setBatchNotifyFunction:fn=>{batchNotifyFn=fn},setScheduler:fn=>{scheduleFn=fn}}}()},"./node_modules/@tanstack/query-core/build/modern/onlineManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>onlineManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),onlineManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.l{#online=!0;#cleanup;#setup;constructor(){super(),this.#setup=onOnline=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.sk&&window.addEventListener){const onlineListener=()=>onOnline(!0),offlineListener=()=>onOnline(!1);return window.addEventListener("online",onlineListener,!1),window.addEventListener("offline",offlineListener,!1),()=>{window.removeEventListener("online",onlineListener),window.removeEventListener("offline",offlineListener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup(this.setOnline.bind(this))}setOnline(online){this.#online!==online&&(this.#online=online,this.listeners.forEach((listener=>{listener(online)})))}isOnline(){return this.#online}}},"./node_modules/@tanstack/query-core/build/modern/query.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Query,z:()=>fetchState});var _utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),_notifyManager_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),_retryer_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/retryer.js"),_removable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/removable.js"),Query=class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.F{#initialState;#revertState;#cache;#client;#retryer;#defaultOptions;#abortSignalConsumed;constructor(config){super(),this.#abortSignalConsumed=!1,this.#defaultOptions=config.defaultOptions,this.setOptions(config.options),this.observers=[],this.#client=config.client,this.#cache=this.#client.getQueryCache(),this.queryKey=config.queryKey,this.queryHash=config.queryHash,this.#initialState=getDefaultState(this.options),this.state=config.state??this.#initialState,this.scheduleGc()}get meta(){return this.options.meta}get promise(){return this.#retryer?.promise}setOptions(options){if(this.options={...this.#defaultOptions,...options},this.updateGcTime(this.options.gcTime),this.state&&void 0===this.state.data){const defaultState=getDefaultState(this.options);void 0!==defaultState.data&&(this.setData(defaultState.data,{updatedAt:defaultState.dataUpdatedAt,manual:!0}),this.#initialState=defaultState)}}optionalRemove(){this.observers.length||"idle"!==this.state.fetchStatus||this.#cache.remove(this)}setData(newData,options){const data=(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.oE)(this.state.data,newData,this.options);return this.#dispatch({data,type:"success",dataUpdatedAt:options?.updatedAt,manual:options?.manual}),data}setState(state,setStateOptions){this.#dispatch({type:"setState",state,setStateOptions})}cancel(options){const promise=this.#retryer?.promise;return this.#retryer?.cancel(options),promise?promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.ZT).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.ZT):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(this.#initialState)}isActive(){return this.observers.some((observer=>!1!==(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.Nc)(observer.options.enabled,this)))}isDisabled(){return this.getObserversCount()>0?!this.isActive():this.options.queryFn===_utils_js__WEBPACK_IMPORTED_MODULE_1__.CN||this.state.dataUpdateCount+this.state.errorUpdateCount===0}isStatic(){return this.getObserversCount()>0&&this.observers.some((observer=>"static"===(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.KC)(observer.options.staleTime,this)))}isStale(){return this.getObserversCount()>0?this.observers.some((observer=>observer.getCurrentResult().isStale)):void 0===this.state.data||this.state.isInvalidated}isStaleByTime(staleTime=0){return void 0===this.state.data||"static"!==staleTime&&(!!this.state.isInvalidated||!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.Kp)(this.state.dataUpdatedAt,staleTime))}onFocus(){const observer=this.observers.find((x=>x.shouldFetchOnWindowFocus()));observer?.refetch({cancelRefetch:!1}),this.#retryer?.continue()}onOnline(){const observer=this.observers.find((x=>x.shouldFetchOnReconnect()));observer?.refetch({cancelRefetch:!1}),this.#retryer?.continue()}addObserver(observer){this.observers.includes(observer)||(this.observers.push(observer),this.clearGcTimeout(),this.#cache.notify({type:"observerAdded",query:this,observer}))}removeObserver(observer){this.observers.includes(observer)&&(this.observers=this.observers.filter((x=>x!==observer)),this.observers.length||(this.#retryer&&(this.#abortSignalConsumed?this.#retryer.cancel({revert:!0}):this.#retryer.cancelRetry()),this.scheduleGc()),this.#cache.notify({type:"observerRemoved",query:this,observer}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||this.#dispatch({type:"invalidate"})}async fetch(options,fetchOptions){if("idle"!==this.state.fetchStatus&&"rejected"!==this.#retryer?.status())if(void 0!==this.state.data&&fetchOptions?.cancelRefetch)this.cancel({silent:!0});else if(this.#retryer)return this.#retryer.continueRetry(),this.#retryer.promise;if(options&&this.setOptions(options),!this.options.queryFn){const observer=this.observers.find((x=>x.options.queryFn));observer&&this.setOptions(observer.options)}const abortController=new AbortController,addSignalProperty=object=>{Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(this.#abortSignalConsumed=!0,abortController.signal)})},fetchFn=()=>{const queryFn=(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.cG)(this.options,fetchOptions),queryFnContext=(()=>{const queryFnContext2={client:this.#client,queryKey:this.queryKey,meta:this.meta};return addSignalProperty(queryFnContext2),queryFnContext2})();return this.#abortSignalConsumed=!1,this.options.persister?this.options.persister(queryFn,queryFnContext,this):queryFn(queryFnContext)},context=(()=>{const context2={fetchOptions,options:this.options,queryKey:this.queryKey,client:this.#client,state:this.state,fetchFn};return addSignalProperty(context2),context2})();this.options.behavior?.onFetch(context,this),this.#revertState=this.state,"idle"!==this.state.fetchStatus&&this.state.fetchMeta===context.fetchOptions?.meta||this.#dispatch({type:"fetch",meta:context.fetchOptions?.meta}),this.#retryer=(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.Mz)({initialPromise:fetchOptions?.initialPromise,fn:context.fetchFn,onCancel:error=>{error instanceof _retryer_js__WEBPACK_IMPORTED_MODULE_2__.p8&&error.revert&&this.setState({...this.#revertState,fetchStatus:"idle"}),abortController.abort()},onFail:(failureCount,error)=>{this.#dispatch({type:"failed",failureCount,error})},onPause:()=>{this.#dispatch({type:"pause"})},onContinue:()=>{this.#dispatch({type:"continue"})},retry:context.options.retry,retryDelay:context.options.retryDelay,networkMode:context.options.networkMode,canRun:()=>!0});try{const data=await this.#retryer.start();if(void 0===data)throw new Error(`${this.queryHash} data is undefined`);return this.setData(data),this.#cache.config.onSuccess?.(data,this),this.#cache.config.onSettled?.(data,this.state.error,this),data}catch(error){if(error instanceof _retryer_js__WEBPACK_IMPORTED_MODULE_2__.p8){if(error.silent)return this.#retryer.promise;if(error.revert){if(void 0===this.state.data)throw error;return this.state.data}}throw this.#dispatch({type:"error",error}),this.#cache.config.onError?.(error,this),this.#cache.config.onSettled?.(this.state.data,error,this),error}finally{this.scheduleGc()}}#dispatch(action){this.state=(state=>{switch(action.type){case"failed":return{...state,fetchFailureCount:action.failureCount,fetchFailureReason:action.error};case"pause":return{...state,fetchStatus:"paused"};case"continue":return{...state,fetchStatus:"fetching"};case"fetch":return{...state,...fetchState(state.data,this.options),fetchMeta:action.meta??null};case"success":const newState={...state,data:action.data,dataUpdateCount:state.dataUpdateCount+1,dataUpdatedAt:action.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!action.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};return this.#revertState=action.manual?newState:void 0,newState;case"error":const error=action.error;return{...state,error,errorUpdateCount:state.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:state.fetchFailureCount+1,fetchFailureReason:error,fetchStatus:"idle",status:"error"};case"invalidate":return{...state,isInvalidated:!0};case"setState":return{...state,...action.state}}})(this.state),_notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.Vr.batch((()=>{this.observers.forEach((observer=>{observer.onQueryUpdate()})),this.#cache.notify({query:this,type:"updated",action})}))}};function fetchState(data,options){return{fetchFailureCount:0,fetchFailureReason:null,fetchStatus:(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.Kw)(options.networkMode)?"fetching":"paused",...void 0===data&&{error:null,status:"pending"}}}function getDefaultState(options){const data="function"==typeof options.initialData?options.initialData():options.initialData,hasData=void 0!==data,initialDataUpdatedAt=hasData?"function"==typeof options.initialDataUpdatedAt?options.initialDataUpdatedAt():options.initialDataUpdatedAt:0;return{data,dataUpdateCount:0,dataUpdatedAt:hasData?initialDataUpdatedAt??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:hasData?"success":"pending",fetchStatus:"idle"}}},"./node_modules/@tanstack/query-core/build/modern/queryClient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>QueryClient});var utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),QueryCache=class extends subscribable.l{constructor(config={}){super(),this.config=config,this.#queries=new Map}#queries;build(client,options,state){const queryKey=options.queryKey,queryHash=options.queryHash??(0,utils.Rm)(queryKey,options);let query=this.get(queryHash);return query||(query=new modern_query.A({client,queryKey,queryHash,options:client.defaultQueryOptions(options),state,defaultOptions:client.getQueryDefaults(queryKey)}),this.add(query)),query}add(query){this.#queries.has(query.queryHash)||(this.#queries.set(query.queryHash,query),this.notify({type:"added",query}))}remove(query){const queryInMap=this.#queries.get(query.queryHash);queryInMap&&(query.destroy(),queryInMap===query&&this.#queries.delete(query.queryHash),this.notify({type:"removed",query}))}clear(){notifyManager.Vr.batch((()=>{this.getAll().forEach((query=>{this.remove(query)}))}))}get(queryHash){return this.#queries.get(queryHash)}getAll(){return[...this.#queries.values()]}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find((query=>(0,utils._x)(defaultedFilters,query)))}findAll(filters={}){const queries=this.getAll();return Object.keys(filters).length>0?queries.filter((query=>(0,utils._x)(filters,query))):queries}notify(event){notifyManager.Vr.batch((()=>{this.listeners.forEach((listener=>{listener(event)}))}))}onFocus(){notifyManager.Vr.batch((()=>{this.getAll().forEach((query=>{query.onFocus()}))}))}onOnline(){notifyManager.Vr.batch((()=>{this.getAll().forEach((query=>{query.onOnline()}))}))}},removable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/removable.js"),retryer=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/retryer.js"),Mutation=class extends removable.F{#client;#observers;#mutationCache;#retryer;constructor(config){super(),this.#client=config.client,this.mutationId=config.mutationId,this.#mutationCache=config.mutationCache,this.#observers=[],this.state=config.state||{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0},this.setOptions(config.options),this.scheduleGc()}setOptions(options){this.options=options,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(observer){this.#observers.includes(observer)||(this.#observers.push(observer),this.clearGcTimeout(),this.#mutationCache.notify({type:"observerAdded",mutation:this,observer}))}removeObserver(observer){this.#observers=this.#observers.filter((x=>x!==observer)),this.scheduleGc(),this.#mutationCache.notify({type:"observerRemoved",mutation:this,observer})}optionalRemove(){this.#observers.length||("pending"===this.state.status?this.scheduleGc():this.#mutationCache.remove(this))}continue(){return this.#retryer?.continue()??this.execute(this.state.variables)}async execute(variables){const onContinue=()=>{this.#dispatch({type:"continue"})},mutationFnContext={client:this.#client,meta:this.options.meta,mutationKey:this.options.mutationKey};this.#retryer=(0,retryer.Mz)({fn:()=>this.options.mutationFn?this.options.mutationFn(variables,mutationFnContext):Promise.reject(new Error("No mutationFn found")),onFail:(failureCount,error)=>{this.#dispatch({type:"failed",failureCount,error})},onPause:()=>{this.#dispatch({type:"pause"})},onContinue,retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>this.#mutationCache.canRun(this)});const restored="pending"===this.state.status,isPaused=!this.#retryer.canStart();try{if(restored)onContinue();else{this.#dispatch({type:"pending",variables,isPaused}),await(this.#mutationCache.config.onMutate?.(variables,this,mutationFnContext));const context=await(this.options.onMutate?.(variables,mutationFnContext));context!==this.state.context&&this.#dispatch({type:"pending",context,variables,isPaused})}const data=await this.#retryer.start();return await(this.#mutationCache.config.onSuccess?.(data,variables,this.state.context,this,mutationFnContext)),await(this.options.onSuccess?.(data,variables,this.state.context,mutationFnContext)),await(this.#mutationCache.config.onSettled?.(data,null,this.state.variables,this.state.context,this,mutationFnContext)),await(this.options.onSettled?.(data,null,variables,this.state.context,mutationFnContext)),this.#dispatch({type:"success",data}),data}catch(error){try{throw await(this.#mutationCache.config.onError?.(error,variables,this.state.context,this,mutationFnContext)),await(this.options.onError?.(error,variables,this.state.context,mutationFnContext)),await(this.#mutationCache.config.onSettled?.(void 0,error,this.state.variables,this.state.context,this,mutationFnContext)),await(this.options.onSettled?.(void 0,error,variables,this.state.context,mutationFnContext)),error}finally{this.#dispatch({type:"error",error})}}finally{this.#mutationCache.runNext(this)}}#dispatch(action){this.state=(state=>{switch(action.type){case"failed":return{...state,failureCount:action.failureCount,failureReason:action.error};case"pause":return{...state,isPaused:!0};case"continue":return{...state,isPaused:!1};case"pending":return{...state,context:action.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:action.isPaused,status:"pending",variables:action.variables,submittedAt:Date.now()};case"success":return{...state,data:action.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...state,data:void 0,error:action.error,failureCount:state.failureCount+1,failureReason:action.error,isPaused:!1,status:"error"}}})(this.state),notifyManager.Vr.batch((()=>{this.#observers.forEach((observer=>{observer.onMutationUpdate(action)})),this.#mutationCache.notify({mutation:this,type:"updated",action})}))}};var MutationCache=class extends subscribable.l{constructor(config={}){super(),this.config=config,this.#mutations=new Set,this.#scopes=new Map,this.#mutationId=0}#mutations;#scopes;#mutationId;build(client,options,state){const mutation=new Mutation({client,mutationCache:this,mutationId:++this.#mutationId,options:client.defaultMutationOptions(options),state});return this.add(mutation),mutation}add(mutation){this.#mutations.add(mutation);const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);scopedMutations?scopedMutations.push(mutation):this.#scopes.set(scope,[mutation])}this.notify({type:"added",mutation})}remove(mutation){if(this.#mutations.delete(mutation)){const scope=scopeFor(mutation);if("string"==typeof scope){const scopedMutations=this.#scopes.get(scope);if(scopedMutations)if(scopedMutations.length>1){const index=scopedMutations.indexOf(mutation);-1!==index&&scopedMutations.splice(index,1)}else scopedMutations[0]===mutation&&this.#scopes.delete(scope)}}this.notify({type:"removed",mutation})}canRun(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const mutationsWithSameScope=this.#scopes.get(scope),firstPendingMutation=mutationsWithSameScope?.find((m=>"pending"===m.state.status));return!firstPendingMutation||firstPendingMutation===mutation}return!0}runNext(mutation){const scope=scopeFor(mutation);if("string"==typeof scope){const foundMutation=this.#scopes.get(scope)?.find((m=>m!==mutation&&m.state.isPaused));return foundMutation?.continue()??Promise.resolve()}return Promise.resolve()}clear(){notifyManager.Vr.batch((()=>{this.#mutations.forEach((mutation=>{this.notify({type:"removed",mutation})})),this.#mutations.clear(),this.#scopes.clear()}))}getAll(){return Array.from(this.#mutations)}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find((mutation=>(0,utils.X7)(defaultedFilters,mutation)))}findAll(filters={}){return this.getAll().filter((mutation=>(0,utils.X7)(filters,mutation)))}notify(event){notifyManager.Vr.batch((()=>{this.listeners.forEach((listener=>{listener(event)}))}))}resumePausedMutations(){const pausedMutations=this.getAll().filter((x=>x.state.isPaused));return notifyManager.Vr.batch((()=>Promise.all(pausedMutations.map((mutation=>mutation.continue().catch(utils.ZT))))))}};function scopeFor(mutation){return mutation.options.scope?.id}var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),onlineManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js");function infiniteQueryBehavior(pages){return{onFetch:(context,query)=>{const options=context.options,direction=context.fetchOptions?.meta?.fetchMore?.direction,oldPages=context.state.data?.pages||[],oldPageParams=context.state.data?.pageParams||[];let result={pages:[],pageParams:[]},currentPage=0;const fetchFn=async()=>{let cancelled=!1;const queryFn=(0,utils.cG)(context.options,context.fetchOptions),fetchPage=async(data,param,previous)=>{if(cancelled)return Promise.reject();if(null==param&&data.pages.length)return Promise.resolve(data);const queryFnContext=(()=>{const queryFnContext2={client:context.client,queryKey:context.queryKey,pageParam:param,direction:previous?"backward":"forward",meta:context.options.meta};var object;return object=queryFnContext2,Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(context.signal.aborted?cancelled=!0:context.signal.addEventListener("abort",(()=>{cancelled=!0})),context.signal)}),queryFnContext2})(),page=await queryFn(queryFnContext),{maxPages}=context.options,addTo=previous?utils.Ht:utils.VX;return{pages:addTo(data.pages,page,maxPages),pageParams:addTo(data.pageParams,param,maxPages)}};if(direction&&oldPages.length){const previous="backward"===direction,oldData={pages:oldPages,pageParams:oldPageParams},param=(previous?getPreviousPageParam:getNextPageParam)(options,oldData);result=await fetchPage(oldData,param,previous)}else{const remainingPages=pages??oldPages.length;do{const param=0===currentPage?oldPageParams[0]??options.initialPageParam:getNextPageParam(options,result);if(currentPage>0&&null==param)break;result=await fetchPage(result,param),currentPage++}while(currentPage<remainingPages)}return result};context.options.persister?context.fetchFn=()=>context.options.persister?.(fetchFn,{client:context.client,queryKey:context.queryKey,meta:context.options.meta,signal:context.signal},query):context.fetchFn=fetchFn}}}function getNextPageParam(options,{pages,pageParams}){const lastIndex=pages.length-1;return pages.length>0?options.getNextPageParam(pages[lastIndex],pages,pageParams[lastIndex],pageParams):void 0}function getPreviousPageParam(options,{pages,pageParams}){return pages.length>0?options.getPreviousPageParam?.(pages[0],pages,pageParams[0],pageParams):void 0}var QueryClient=class{#queryCache;#mutationCache;#defaultOptions;#queryDefaults;#mutationDefaults;#mountCount;#unsubscribeFocus;#unsubscribeOnline;constructor(config={}){this.#queryCache=config.queryCache||new QueryCache,this.#mutationCache=config.mutationCache||new MutationCache,this.#defaultOptions=config.defaultOptions||{},this.#queryDefaults=new Map,this.#mutationDefaults=new Map,this.#mountCount=0}mount(){this.#mountCount++,1===this.#mountCount&&(this.#unsubscribeFocus=focusManager.j.subscribe((async focused=>{focused&&(await this.resumePausedMutations(),this.#queryCache.onFocus())})),this.#unsubscribeOnline=onlineManager.N.subscribe((async online=>{online&&(await this.resumePausedMutations(),this.#queryCache.onOnline())})))}unmount(){this.#mountCount--,0===this.#mountCount&&(this.#unsubscribeFocus?.(),this.#unsubscribeFocus=void 0,this.#unsubscribeOnline?.(),this.#unsubscribeOnline=void 0)}isFetching(filters){return this.#queryCache.findAll({...filters,fetchStatus:"fetching"}).length}isMutating(filters){return this.#mutationCache.findAll({...filters,status:"pending"}).length}getQueryData(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state.data}ensureQueryData(options){const defaultedOptions=this.defaultQueryOptions(options),query=this.#queryCache.build(this,defaultedOptions),cachedData=query.state.data;return void 0===cachedData?this.fetchQuery(options):(options.revalidateIfStale&&query.isStaleByTime((0,utils.KC)(defaultedOptions.staleTime,query))&&this.prefetchQuery(defaultedOptions),Promise.resolve(cachedData))}getQueriesData(filters){return this.#queryCache.findAll(filters).map((({queryKey,state})=>[queryKey,state.data]))}setQueryData(queryKey,updater,options){const defaultedOptions=this.defaultQueryOptions({queryKey}),query=this.#queryCache.get(defaultedOptions.queryHash),prevData=query?.state.data,data=(0,utils.SE)(updater,prevData);if(void 0!==data)return this.#queryCache.build(this,defaultedOptions).setData(data,{...options,manual:!0})}setQueriesData(filters,updater,options){return notifyManager.Vr.batch((()=>this.#queryCache.findAll(filters).map((({queryKey})=>[queryKey,this.setQueryData(queryKey,updater,options)]))))}getQueryState(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state}removeQueries(filters){const queryCache=this.#queryCache;notifyManager.Vr.batch((()=>{queryCache.findAll(filters).forEach((query=>{queryCache.remove(query)}))}))}resetQueries(filters,options){const queryCache=this.#queryCache;return notifyManager.Vr.batch((()=>(queryCache.findAll(filters).forEach((query=>{query.reset()})),this.refetchQueries({type:"active",...filters},options))))}cancelQueries(filters,cancelOptions={}){const defaultedCancelOptions={revert:!0,...cancelOptions},promises=notifyManager.Vr.batch((()=>this.#queryCache.findAll(filters).map((query=>query.cancel(defaultedCancelOptions)))));return Promise.all(promises).then(utils.ZT).catch(utils.ZT)}invalidateQueries(filters,options={}){return notifyManager.Vr.batch((()=>(this.#queryCache.findAll(filters).forEach((query=>{query.invalidate()})),"none"===filters?.refetchType?Promise.resolve():this.refetchQueries({...filters,type:filters?.refetchType??filters?.type??"active"},options))))}refetchQueries(filters,options={}){const fetchOptions={...options,cancelRefetch:options.cancelRefetch??!0},promises=notifyManager.Vr.batch((()=>this.#queryCache.findAll(filters).filter((query=>!query.isDisabled()&&!query.isStatic())).map((query=>{let promise=query.fetch(void 0,fetchOptions);return fetchOptions.throwOnError||(promise=promise.catch(utils.ZT)),"paused"===query.state.fetchStatus?Promise.resolve():promise}))));return Promise.all(promises).then(utils.ZT)}fetchQuery(options){const defaultedOptions=this.defaultQueryOptions(options);void 0===defaultedOptions.retry&&(defaultedOptions.retry=!1);const query=this.#queryCache.build(this,defaultedOptions);return query.isStaleByTime((0,utils.KC)(defaultedOptions.staleTime,query))?query.fetch(defaultedOptions):Promise.resolve(query.state.data)}prefetchQuery(options){return this.fetchQuery(options).then(utils.ZT).catch(utils.ZT)}fetchInfiniteQuery(options){return options.behavior=infiniteQueryBehavior(options.pages),this.fetchQuery(options)}prefetchInfiniteQuery(options){return this.fetchInfiniteQuery(options).then(utils.ZT).catch(utils.ZT)}ensureInfiniteQueryData(options){return options.behavior=infiniteQueryBehavior(options.pages),this.ensureQueryData(options)}resumePausedMutations(){return onlineManager.N.isOnline()?this.#mutationCache.resumePausedMutations():Promise.resolve()}getQueryCache(){return this.#queryCache}getMutationCache(){return this.#mutationCache}getDefaultOptions(){return this.#defaultOptions}setDefaultOptions(options){this.#defaultOptions=options}setQueryDefaults(queryKey,options){this.#queryDefaults.set((0,utils.Ym)(queryKey),{queryKey,defaultOptions:options})}getQueryDefaults(queryKey){const defaults=[...this.#queryDefaults.values()],result={};return defaults.forEach((queryDefault=>{(0,utils.to)(queryKey,queryDefault.queryKey)&&Object.assign(result,queryDefault.defaultOptions)})),result}setMutationDefaults(mutationKey,options){this.#mutationDefaults.set((0,utils.Ym)(mutationKey),{mutationKey,defaultOptions:options})}getMutationDefaults(mutationKey){const defaults=[...this.#mutationDefaults.values()],result={};return defaults.forEach((queryDefault=>{(0,utils.to)(mutationKey,queryDefault.mutationKey)&&Object.assign(result,queryDefault.defaultOptions)})),result}defaultQueryOptions(options){if(options._defaulted)return options;const defaultedOptions={...this.#defaultOptions.queries,...this.getQueryDefaults(options.queryKey),...options,_defaulted:!0};return defaultedOptions.queryHash||(defaultedOptions.queryHash=(0,utils.Rm)(defaultedOptions.queryKey,defaultedOptions)),void 0===defaultedOptions.refetchOnReconnect&&(defaultedOptions.refetchOnReconnect="always"!==defaultedOptions.networkMode),void 0===defaultedOptions.throwOnError&&(defaultedOptions.throwOnError=!!defaultedOptions.suspense),!defaultedOptions.networkMode&&defaultedOptions.persister&&(defaultedOptions.networkMode="offlineFirst"),defaultedOptions.queryFn===utils.CN&&(defaultedOptions.enabled=!1),defaultedOptions}defaultMutationOptions(options){return options?._defaulted?options:{...this.#defaultOptions.mutations,...options?.mutationKey&&this.getMutationDefaults(options.mutationKey),...options,_defaulted:!0}}clear(){this.#queryCache.clear(),this.#mutationCache.clear()}}},"./node_modules/@tanstack/query-core/build/modern/removable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>Removable});var _timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/timeoutManager.js"),_utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),Removable=class{#gcTimeout;destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.PN)(this.gcTime)&&(this.#gcTimeout=_timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__.mr.setTimeout((()=>{this.optionalRemove()}),this.gcTime))}updateGcTime(newGcTime){this.gcTime=Math.max(this.gcTime||0,newGcTime??(_utils_js__WEBPACK_IMPORTED_MODULE_0__.sk?1/0:3e5))}clearGcTimeout(){this.#gcTimeout&&(_timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__.mr.clearTimeout(this.#gcTimeout),this.#gcTimeout=void 0)}}},"./node_modules/@tanstack/query-core/build/modern/retryer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Kw:()=>canFetch,Mz:()=>createRetryer,p8:()=>CancelledError});var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js"),_thenable_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/thenable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js");function defaultRetryDelay(failureCount){return Math.min(1e3*2**failureCount,3e4)}function canFetch(networkMode){return"online"!==(networkMode??"online")||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.N.isOnline()}var CancelledError=class extends Error{constructor(options){super("CancelledError"),this.revert=options?.revert,this.silent=options?.silent}};function createRetryer(config){let continueFn,isRetryCancelled=!1,failureCount=0;const thenable=(0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.O)(),isResolved=()=>"pending"!==thenable.status,canContinue=()=>_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.j.isFocused()&&("always"===config.networkMode||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.N.isOnline())&&config.canRun(),canStart=()=>canFetch(config.networkMode)&&config.canRun(),resolve=value=>{isResolved()||(continueFn?.(),thenable.resolve(value))},reject=value=>{isResolved()||(continueFn?.(),thenable.reject(value))},pause=()=>new Promise((continueResolve=>{continueFn=value=>{(isResolved()||canContinue())&&continueResolve(value)},config.onPause?.()})).then((()=>{continueFn=void 0,isResolved()||config.onContinue?.()})),run=()=>{if(isResolved())return;let promiseOrValue;const initialPromise=0===failureCount?config.initialPromise:void 0;try{promiseOrValue=initialPromise??config.fn()}catch(error){promiseOrValue=Promise.reject(error)}Promise.resolve(promiseOrValue).then(resolve).catch((error=>{if(isResolved())return;const retry=config.retry??(_utils_js__WEBPACK_IMPORTED_MODULE_3__.sk?0:3),retryDelay=config.retryDelay??defaultRetryDelay,delay="function"==typeof retryDelay?retryDelay(failureCount,error):retryDelay,shouldRetry=!0===retry||"number"==typeof retry&&failureCount<retry||"function"==typeof retry&&retry(failureCount,error);!isRetryCancelled&&shouldRetry?(failureCount++,config.onFail?.(failureCount,error),(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__._v)(delay).then((()=>canContinue()?void 0:pause())).then((()=>{isRetryCancelled?reject(error):run()}))):reject(error)}))};return{promise:thenable,status:()=>thenable.status,cancel:cancelOptions=>{if(!isResolved()){const error=new CancelledError(cancelOptions);reject(error),config.onCancel?.(error)}},continue:()=>(continueFn?.(),thenable),cancelRetry:()=>{isRetryCancelled=!0},continueRetry:()=>{isRetryCancelled=!1},canStart,start:()=>(canStart()?run():pause().then(run),thenable)}}},"./node_modules/@tanstack/query-core/build/modern/subscribable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>Subscribable});var Subscribable=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(listener){return this.listeners.add(listener),this.onSubscribe(),()=>{this.listeners.delete(listener),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}}},"./node_modules/@tanstack/query-core/build/modern/thenable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function pendingThenable(){let resolve,reject;const thenable=new Promise(((_resolve,_reject)=>{resolve=_resolve,reject=_reject}));function finalize(data){Object.assign(thenable,data),delete thenable.resolve,delete thenable.reject}return thenable.status="pending",thenable.catch((()=>{})),thenable.resolve=value=>{finalize({status:"fulfilled",value}),resolve(value)},thenable.reject=reason=>{finalize({status:"rejected",reason}),reject(reason)},thenable}__webpack_require__.d(__webpack_exports__,{O:()=>pendingThenable})},"./node_modules/@tanstack/query-core/build/modern/timeoutManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hp:()=>systemSetTimeoutZero,mr:()=>timeoutManager});var defaultTimeoutProvider={setTimeout:(callback,delay)=>setTimeout(callback,delay),clearTimeout:timeoutId=>clearTimeout(timeoutId),setInterval:(callback,delay)=>setInterval(callback,delay),clearInterval:intervalId=>clearInterval(intervalId)},timeoutManager=new class{#provider=defaultTimeoutProvider;#providerCalled=!1;setTimeoutProvider(provider){this.#provider=provider}setTimeout(callback,delay){return this.#provider.setTimeout(callback,delay)}clearTimeout(timeoutId){this.#provider.clearTimeout(timeoutId)}setInterval(callback,delay){return this.#provider.setInterval(callback,delay)}clearInterval(intervalId){this.#provider.clearInterval(intervalId)}};function systemSetTimeoutZero(callback){setTimeout(callback,0)}},"./node_modules/@tanstack/query-core/build/modern/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CN:()=>skipToken,Ht:()=>addToStart,KC:()=>resolveStaleTime,Kp:()=>timeUntilStale,L3:()=>shouldThrowError,Nc:()=>resolveEnabled,PN:()=>isValidTimeout,Rm:()=>hashQueryKeyByOptions,SE:()=>functionalUpdate,VS:()=>shallowEqualObjects,VX:()=>addToEnd,X7:()=>matchMutation,Ym:()=>hashKey,ZT:()=>noop,_v:()=>sleep,_x:()=>matchQuery,cG:()=>ensureQueryFn,oE:()=>replaceData,sk:()=>isServer,to:()=>partialMatchKey});var _timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/timeoutManager.js"),isServer="undefined"==typeof window||"Deno"in globalThis;function noop(){}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function isValidTimeout(value){return"number"==typeof value&&value>=0&&value!==1/0}function timeUntilStale(updatedAt,staleTime){return Math.max(updatedAt+(staleTime||0)-Date.now(),0)}function resolveStaleTime(staleTime,query){return"function"==typeof staleTime?staleTime(query):staleTime}function resolveEnabled(enabled,query){return"function"==typeof enabled?enabled(query):enabled}function matchQuery(filters,query){const{type="all",exact,fetchStatus,predicate,queryKey,stale}=filters;if(queryKey)if(exact){if(query.queryHash!==hashQueryKeyByOptions(queryKey,query.options))return!1}else if(!partialMatchKey(query.queryKey,queryKey))return!1;if("all"!==type){const isActive=query.isActive();if("active"===type&&!isActive)return!1;if("inactive"===type&&isActive)return!1}return("boolean"!=typeof stale||query.isStale()===stale)&&((!fetchStatus||fetchStatus===query.state.fetchStatus)&&!(predicate&&!predicate(query)))}function matchMutation(filters,mutation){const{exact,status,predicate,mutationKey}=filters;if(mutationKey){if(!mutation.options.mutationKey)return!1;if(exact){if(hashKey(mutation.options.mutationKey)!==hashKey(mutationKey))return!1}else if(!partialMatchKey(mutation.options.mutationKey,mutationKey))return!1}return(!status||mutation.state.status===status)&&!(predicate&&!predicate(mutation))}function hashQueryKeyByOptions(queryKey,options){return(options?.queryKeyHashFn||hashKey)(queryKey)}function hashKey(queryKey){return JSON.stringify(queryKey,((_,val)=>isPlainObject(val)?Object.keys(val).sort().reduce(((result,key)=>(result[key]=val[key],result)),{}):val))}function partialMatchKey(a,b){return a===b||typeof a==typeof b&&(!(!a||!b||"object"!=typeof a||"object"!=typeof b)&&Object.keys(b).every((key=>partialMatchKey(a[key],b[key]))))}var hasOwn=Object.prototype.hasOwnProperty;function replaceEqualDeep(a,b){if(a===b)return a;const array=isPlainArray(a)&&isPlainArray(b);if(!(array||isPlainObject(a)&&isPlainObject(b)))return b;const aSize=(array?a:Object.keys(a)).length,bItems=array?b:Object.keys(b),bSize=bItems.length,copy=array?new Array(bSize):{};let equalItems=0;for(let i=0;i<bSize;i++){const key=array?i:bItems[i],aItem=a[key],bItem=b[key];if(aItem===bItem){copy[key]=aItem,(array?i<aSize:hasOwn.call(a,key))&&equalItems++;continue}if(null===aItem||null===bItem||"object"!=typeof aItem||"object"!=typeof bItem){copy[key]=bItem;continue}const v=replaceEqualDeep(aItem,bItem);copy[key]=v,v===aItem&&equalItems++}return aSize===bSize&&equalItems===aSize?a:copy}function shallowEqualObjects(a,b){if(!b||Object.keys(a).length!==Object.keys(b).length)return!1;for(const key in a)if(a[key]!==b[key])return!1;return!0}function isPlainArray(value){return Array.isArray(value)&&value.length===Object.keys(value).length}function isPlainObject(o){if(!hasObjectPrototype(o))return!1;const ctor=o.constructor;if(void 0===ctor)return!0;const prot=ctor.prototype;return!!hasObjectPrototype(prot)&&(!!prot.hasOwnProperty("isPrototypeOf")&&Object.getPrototypeOf(o)===Object.prototype)}function hasObjectPrototype(o){return"[object Object]"===Object.prototype.toString.call(o)}function sleep(timeout){return new Promise((resolve=>{_timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__.mr.setTimeout(resolve,timeout)}))}function replaceData(prevData,data,options){return"function"==typeof options.structuralSharing?options.structuralSharing(prevData,data):!1!==options.structuralSharing?replaceEqualDeep(prevData,data):data}function addToEnd(items,item,max=0){const newItems=[...items,item];return max&&newItems.length>max?newItems.slice(1):newItems}function addToStart(items,item,max=0){const newItems=[item,...items];return max&&newItems.length>max?newItems.slice(0,-1):newItems}var skipToken=Symbol();function ensureQueryFn(options,fetchOptions){return!options.queryFn&&fetchOptions?.initialPromise?()=>fetchOptions.initialPromise:options.queryFn&&options.queryFn!==skipToken?options.queryFn:()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))}function shouldThrowError(throwOnError,params){return"function"==typeof throwOnError?throwOnError(...params):!!throwOnError}},"./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NL:()=>useQueryClient,aH:()=>QueryClientProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),QueryClientContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),useQueryClient=queryClient=>{const client=react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);if(queryClient)return queryClient;if(!client)throw new Error("No QueryClient set, use QueryClientProvider to set one");return client},QueryClientProvider=({client,children})=>(react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(client.mount(),()=>{client.unmount()})),[client]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider,{value:client,children}))},"./node_modules/@tanstack/react-query/build/modern/useQuery.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a:()=>useQuery});var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),thenable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/thenable.js"),utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),timeoutManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/timeoutManager.js"),QueryObserver=class extends subscribable.l{constructor(client,options){super(),this.options=options,this.#client=client,this.#selectError=null,this.#currentThenable=(0,thenable.O)(),this.bindMethods(),this.setOptions(options)}#client;#currentQuery=void 0;#currentQueryInitialState=void 0;#currentResult=void 0;#currentResultState;#currentResultOptions;#currentThenable;#selectError;#selectFn;#selectResult;#lastQueryWithDefinedData;#staleTimeoutId;#refetchIntervalId;#currentRefetchInterval;#trackedProps=new Set;bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){1===this.listeners.size&&(this.#currentQuery.addObserver(this),shouldFetchOnMount(this.#currentQuery,this.options)?this.#executeFetch():this.updateResult(),this.#updateTimers())}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return shouldFetchOn(this.#currentQuery,this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return shouldFetchOn(this.#currentQuery,this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,this.#clearStaleTimeout(),this.#clearRefetchInterval(),this.#currentQuery.removeObserver(this)}setOptions(options){const prevOptions=this.options,prevQuery=this.#currentQuery;if(this.options=this.#client.defaultQueryOptions(options),void 0!==this.options.enabled&&"boolean"!=typeof this.options.enabled&&"function"!=typeof this.options.enabled&&"boolean"!=typeof(0,utils.Nc)(this.options.enabled,this.#currentQuery))throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");this.#updateQuery(),this.#currentQuery.setOptions(this.options),prevOptions._defaulted&&!(0,utils.VS)(this.options,prevOptions)&&this.#client.getQueryCache().notify({type:"observerOptionsUpdated",query:this.#currentQuery,observer:this});const mounted=this.hasListeners();mounted&&shouldFetchOptionally(this.#currentQuery,prevQuery,this.options,prevOptions)&&this.#executeFetch(),this.updateResult(),!mounted||this.#currentQuery===prevQuery&&(0,utils.Nc)(this.options.enabled,this.#currentQuery)===(0,utils.Nc)(prevOptions.enabled,this.#currentQuery)&&(0,utils.KC)(this.options.staleTime,this.#currentQuery)===(0,utils.KC)(prevOptions.staleTime,this.#currentQuery)||this.#updateStaleTimeout();const nextRefetchInterval=this.#computeRefetchInterval();!mounted||this.#currentQuery===prevQuery&&(0,utils.Nc)(this.options.enabled,this.#currentQuery)===(0,utils.Nc)(prevOptions.enabled,this.#currentQuery)&&nextRefetchInterval===this.#currentRefetchInterval||this.#updateRefetchInterval(nextRefetchInterval)}getOptimisticResult(options){const query=this.#client.getQueryCache().build(this.#client,options),result=this.createResult(query,options);return function shouldAssignObserverCurrentProperties(observer,optimisticResult){if(!(0,utils.VS)(observer.getCurrentResult(),optimisticResult))return!0;return!1}(this,result)&&(this.#currentResult=result,this.#currentResultOptions=this.options,this.#currentResultState=this.#currentQuery.state),result}getCurrentResult(){return this.#currentResult}trackResult(result,onPropTracked){return new Proxy(result,{get:(target,key)=>(this.trackProp(key),onPropTracked?.(key),"promise"!==key||this.options.experimental_prefetchInRender||"pending"!==this.#currentThenable.status||this.#currentThenable.reject(new Error("experimental_prefetchInRender feature flag is not enabled")),Reflect.get(target,key))})}trackProp(key){this.#trackedProps.add(key)}getCurrentQuery(){return this.#currentQuery}refetch({...options}={}){return this.fetch({...options})}fetchOptimistic(options){const defaultedOptions=this.#client.defaultQueryOptions(options),query=this.#client.getQueryCache().build(this.#client,defaultedOptions);return query.fetch().then((()=>this.createResult(query,defaultedOptions)))}fetch(fetchOptions){return this.#executeFetch({...fetchOptions,cancelRefetch:fetchOptions.cancelRefetch??!0}).then((()=>(this.updateResult(),this.#currentResult)))}#executeFetch(fetchOptions){this.#updateQuery();let promise=this.#currentQuery.fetch(this.options,fetchOptions);return fetchOptions?.throwOnError||(promise=promise.catch(utils.ZT)),promise}#updateStaleTimeout(){this.#clearStaleTimeout();const staleTime=(0,utils.KC)(this.options.staleTime,this.#currentQuery);if(utils.sk||this.#currentResult.isStale||!(0,utils.PN)(staleTime))return;const timeout=(0,utils.Kp)(this.#currentResult.dataUpdatedAt,staleTime)+1;this.#staleTimeoutId=timeoutManager.mr.setTimeout((()=>{this.#currentResult.isStale||this.updateResult()}),timeout)}#computeRefetchInterval(){return("function"==typeof this.options.refetchInterval?this.options.refetchInterval(this.#currentQuery):this.options.refetchInterval)??!1}#updateRefetchInterval(nextInterval){this.#clearRefetchInterval(),this.#currentRefetchInterval=nextInterval,!utils.sk&&!1!==(0,utils.Nc)(this.options.enabled,this.#currentQuery)&&(0,utils.PN)(this.#currentRefetchInterval)&&0!==this.#currentRefetchInterval&&(this.#refetchIntervalId=timeoutManager.mr.setInterval((()=>{(this.options.refetchIntervalInBackground||focusManager.j.isFocused())&&this.#executeFetch()}),this.#currentRefetchInterval))}#updateTimers(){this.#updateStaleTimeout(),this.#updateRefetchInterval(this.#computeRefetchInterval())}#clearStaleTimeout(){this.#staleTimeoutId&&(timeoutManager.mr.clearTimeout(this.#staleTimeoutId),this.#staleTimeoutId=void 0)}#clearRefetchInterval(){this.#refetchIntervalId&&(timeoutManager.mr.clearInterval(this.#refetchIntervalId),this.#refetchIntervalId=void 0)}createResult(query,options){const prevQuery=this.#currentQuery,prevOptions=this.options,prevResult=this.#currentResult,prevResultState=this.#currentResultState,prevResultOptions=this.#currentResultOptions,queryInitialState=query!==prevQuery?query.state:this.#currentQueryInitialState,{state}=query;let data,newState={...state},isPlaceholderData=!1;if(options._optimisticResults){const mounted=this.hasListeners(),fetchOnMount=!mounted&&shouldFetchOnMount(query,options),fetchOptionally=mounted&&shouldFetchOptionally(query,prevQuery,options,prevOptions);(fetchOnMount||fetchOptionally)&&(newState={...newState,...(0,modern_query.z)(state.data,query.options)}),"isRestoring"===options._optimisticResults&&(newState.fetchStatus="idle")}let{error,errorUpdatedAt,status}=newState;data=newState.data;let skipSelect=!1;if(void 0!==options.placeholderData&&void 0===data&&"pending"===status){let placeholderData;prevResult?.isPlaceholderData&&options.placeholderData===prevResultOptions?.placeholderData?(placeholderData=prevResult.data,skipSelect=!0):placeholderData="function"==typeof options.placeholderData?options.placeholderData(this.#lastQueryWithDefinedData?.state.data,this.#lastQueryWithDefinedData):options.placeholderData,void 0!==placeholderData&&(status="success",data=(0,utils.oE)(prevResult?.data,placeholderData,options),isPlaceholderData=!0)}if(options.select&&void 0!==data&&!skipSelect)if(prevResult&&data===prevResultState?.data&&options.select===this.#selectFn)data=this.#selectResult;else try{this.#selectFn=options.select,data=options.select(data),data=(0,utils.oE)(prevResult?.data,data,options),this.#selectResult=data,this.#selectError=null}catch(selectError){this.#selectError=selectError}this.#selectError&&(error=this.#selectError,data=this.#selectResult,errorUpdatedAt=Date.now(),status="error");const isFetching="fetching"===newState.fetchStatus,isPending="pending"===status,isError="error"===status,isLoading=isPending&&isFetching,hasData=void 0!==data,nextResult={status,fetchStatus:newState.fetchStatus,isPending,isSuccess:"success"===status,isError,isInitialLoading:isLoading,isLoading,data,dataUpdatedAt:newState.dataUpdatedAt,error,errorUpdatedAt,failureCount:newState.fetchFailureCount,failureReason:newState.fetchFailureReason,errorUpdateCount:newState.errorUpdateCount,isFetched:newState.dataUpdateCount>0||newState.errorUpdateCount>0,isFetchedAfterMount:newState.dataUpdateCount>queryInitialState.dataUpdateCount||newState.errorUpdateCount>queryInitialState.errorUpdateCount,isFetching,isRefetching:isFetching&&!isPending,isLoadingError:isError&&!hasData,isPaused:"paused"===newState.fetchStatus,isPlaceholderData,isRefetchError:isError&&hasData,isStale:isStale(query,options),refetch:this.refetch,promise:this.#currentThenable,isEnabled:!1!==(0,utils.Nc)(options.enabled,query)};if(this.options.experimental_prefetchInRender){const finalizeThenableIfPossible=thenable=>{"error"===nextResult.status?thenable.reject(nextResult.error):void 0!==nextResult.data&&thenable.resolve(nextResult.data)},recreateThenable=()=>{const pending=this.#currentThenable=nextResult.promise=(0,thenable.O)();finalizeThenableIfPossible(pending)},prevThenable=this.#currentThenable;switch(prevThenable.status){case"pending":query.queryHash===prevQuery.queryHash&&finalizeThenableIfPossible(prevThenable);break;case"fulfilled":"error"!==nextResult.status&&nextResult.data===prevThenable.value||recreateThenable();break;case"rejected":"error"===nextResult.status&&nextResult.error===prevThenable.reason||recreateThenable()}}return nextResult}updateResult(){const prevResult=this.#currentResult,nextResult=this.createResult(this.#currentQuery,this.options);if(this.#currentResultState=this.#currentQuery.state,this.#currentResultOptions=this.options,void 0!==this.#currentResultState.data&&(this.#lastQueryWithDefinedData=this.#currentQuery),(0,utils.VS)(nextResult,prevResult))return;this.#currentResult=nextResult;this.#notify({listeners:(()=>{if(!prevResult)return!0;const{notifyOnChangeProps}=this.options,notifyOnChangePropsValue="function"==typeof notifyOnChangeProps?notifyOnChangeProps():notifyOnChangeProps;if("all"===notifyOnChangePropsValue||!notifyOnChangePropsValue&&!this.#trackedProps.size)return!0;const includedProps=new Set(notifyOnChangePropsValue??this.#trackedProps);return this.options.throwOnError&&includedProps.add("error"),Object.keys(this.#currentResult).some((key=>{const typedKey=key;return this.#currentResult[typedKey]!==prevResult[typedKey]&&includedProps.has(typedKey)}))})()})}#updateQuery(){const query=this.#client.getQueryCache().build(this.#client,this.options);if(query===this.#currentQuery)return;const prevQuery=this.#currentQuery;this.#currentQuery=query,this.#currentQueryInitialState=query.state,this.hasListeners()&&(prevQuery?.removeObserver(this),query.addObserver(this))}onQueryUpdate(){this.updateResult(),this.hasListeners()&&this.#updateTimers()}#notify(notifyOptions){notifyManager.Vr.batch((()=>{notifyOptions.listeners&&this.listeners.forEach((listener=>{listener(this.#currentResult)})),this.#client.getQueryCache().notify({query:this.#currentQuery,type:"observerResultsUpdated"})}))}};function shouldFetchOnMount(query,options){return function shouldLoadOnMount(query,options){return!1!==(0,utils.Nc)(options.enabled,query)&&void 0===query.state.data&&!("error"===query.state.status&&!1===options.retryOnMount)}(query,options)||void 0!==query.state.data&&shouldFetchOn(query,options,options.refetchOnMount)}function shouldFetchOn(query,options,field){if(!1!==(0,utils.Nc)(options.enabled,query)&&"static"!==(0,utils.KC)(options.staleTime,query)){const value="function"==typeof field?field(query):field;return"always"===value||!1!==value&&isStale(query,options)}return!1}function shouldFetchOptionally(query,prevQuery,options,prevOptions){return(query!==prevQuery||!1===(0,utils.Nc)(prevOptions.enabled,query))&&(!options.suspense||"error"!==query.state.status)&&isStale(query,options)}function isStale(query,options){return!1!==(0,utils.Nc)(options.enabled,query)&&query.isStaleByTime((0,utils.KC)(options.staleTime,query))}var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js");__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");function createValue(){let isReset=!1;return{clearReset:()=>{isReset=!1},reset:()=>{isReset=!0},isReset:()=>isReset}}var QueryErrorResetBoundaryContext=react.createContext(createValue()),useQueryErrorResetBoundary=()=>react.useContext(QueryErrorResetBoundaryContext),ensurePreventErrorBoundaryRetry=(options,errorResetBoundary)=>{(options.suspense||options.throwOnError||options.experimental_prefetchInRender)&&(errorResetBoundary.isReset()||(options.retryOnMount=!1))},useClearResetErrorBoundary=errorResetBoundary=>{react.useEffect((()=>{errorResetBoundary.clearReset()}),[errorResetBoundary])},getHasError=({result,errorResetBoundary,throwOnError,query,suspense})=>result.isError&&!errorResetBoundary.isReset()&&!result.isFetching&&query&&(suspense&&void 0===result.data||(0,utils.L3)(throwOnError,[result.error,query])),IsRestoringContext=react.createContext(!1),useIsRestoring=()=>react.useContext(IsRestoringContext),ensureSuspenseTimers=(IsRestoringContext.Provider,defaultedOptions=>{if(defaultedOptions.suspense){const MIN_SUSPENSE_TIME_MS=1e3,clamp=value=>"static"===value?value:Math.max(value??MIN_SUSPENSE_TIME_MS,MIN_SUSPENSE_TIME_MS),originalStaleTime=defaultedOptions.staleTime;defaultedOptions.staleTime="function"==typeof originalStaleTime?(...args)=>clamp(originalStaleTime(...args)):clamp(originalStaleTime),"number"==typeof defaultedOptions.gcTime&&(defaultedOptions.gcTime=Math.max(defaultedOptions.gcTime,MIN_SUSPENSE_TIME_MS))}}),willFetch=(result,isRestoring)=>result.isLoading&&result.isFetching&&!isRestoring,shouldSuspend=(defaultedOptions,result)=>defaultedOptions?.suspense&&result.isPending,fetchOptimistic=(defaultedOptions,observer,errorResetBoundary)=>observer.fetchOptimistic(defaultedOptions).catch((()=>{errorResetBoundary.clearReset()}));function useQuery(options,queryClient){return function useBaseQuery(options,Observer,queryClient){const isRestoring=useIsRestoring(),errorResetBoundary=useQueryErrorResetBoundary(),client=(0,QueryClientProvider.NL)(queryClient),defaultedOptions=client.defaultQueryOptions(options);client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions),defaultedOptions._optimisticResults=isRestoring?"isRestoring":"optimistic",ensureSuspenseTimers(defaultedOptions),ensurePreventErrorBoundaryRetry(defaultedOptions,errorResetBoundary),useClearResetErrorBoundary(errorResetBoundary);const isNewCacheEntry=!client.getQueryCache().get(defaultedOptions.queryHash),[observer]=react.useState((()=>new Observer(client,defaultedOptions))),result=observer.getOptimisticResult(defaultedOptions),shouldSubscribe=!isRestoring&&!1!==options.subscribed;if(react.useSyncExternalStore(react.useCallback((onStoreChange=>{const unsubscribe=shouldSubscribe?observer.subscribe(notifyManager.Vr.batchCalls(onStoreChange)):utils.ZT;return observer.updateResult(),unsubscribe}),[observer,shouldSubscribe]),(()=>observer.getCurrentResult()),(()=>observer.getCurrentResult())),react.useEffect((()=>{observer.setOptions(defaultedOptions)}),[defaultedOptions,observer]),shouldSuspend(defaultedOptions,result))throw fetchOptimistic(defaultedOptions,observer,errorResetBoundary);if(getHasError({result,errorResetBoundary,throwOnError:defaultedOptions.throwOnError,query:client.getQueryCache().get(defaultedOptions.queryHash),suspense:defaultedOptions.suspense}))throw result.error;if(client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions,result),defaultedOptions.experimental_prefetchInRender&&!utils.sk&&willFetch(result,isRestoring)){const promise=isNewCacheEntry?fetchOptimistic(defaultedOptions,observer,errorResetBoundary):client.getQueryCache().get(defaultedOptions.queryHash)?.promise;promise?.catch(utils.ZT).finally((()=>{observer.updateResult()}))}return defaultedOptions.notifyOnChangeProps?result:observer.trackResult(result)}(options,QueryObserver,queryClient)}}}]);